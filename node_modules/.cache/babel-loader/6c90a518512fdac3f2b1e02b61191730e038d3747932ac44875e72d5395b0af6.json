{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, nextTick } from 'vue';\nimport axios from 'axios';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nexport default {\n  setup() {\n    const categories = ref([]);\n    const ingredientsForFood = ref([{\n      category: '',\n      name: '',\n      weight: '',\n      items: [],\n      carbon_emission: 0\n    }]);\n    const ingredientsForEnergy = ref([{\n      category: '',\n      name: '',\n      weight: '',\n      items: [],\n      carbon_emission: 0\n    }]);\n    const ingredientsForTransport = ref([{\n      category: '',\n      name: '',\n      weight: '',\n      items: [],\n      carbon_emission: 0\n    }]);\n    const totalEmission = ref(0.00);\n    const carTravel = ref(0);\n    const treesSaved = ref(0);\n    const chartInstance = ref(null); // Chart.js\n\n    const fetchCategories = () => {\n      axios.get('http://localhost:3001/api/categories').then(response => {\n        categories.value = response.data;\n      }).catch(error => {\n        console.error('There was an error fetching categories!', error);\n      });\n    };\n    const fetchItems = (index, type) => {\n      let ingredientsArray;\n      if (type === 'food') {\n        ingredientsArray = ingredientsForFood;\n      } else if (type === 'energy') {\n        ingredientsArray = ingredientsForEnergy;\n      } else if (type === 'transport') {\n        ingredientsArray = ingredientsForTransport;\n      }\n      const category_id = ingredientsArray.value[index].category;\n      if (category_id) {\n        axios.get(`http://localhost:3001/api/items/${category_id}`).then(response => {\n          ingredientsArray.value[index].items = response.data;\n          ingredientsArray.value[index].name = ''; // 重製食材\n        }).catch(error => {\n          console.error('There was an error fetching items!', error);\n        });\n      }\n    };\n    const updateCarbonEmission = (index, type) => {\n      let ingredientsArray;\n      if (type === 'food') {\n        ingredientsArray = ingredientsForFood;\n      } else if (type === 'energy') {\n        ingredientsArray = ingredientsForEnergy;\n      } else if (type === 'transport') {\n        ingredientsArray = ingredientsForTransport;\n      }\n      const ingredient = ingredientsArray.value[index];\n      if (ingredient.weight < 0) {\n        alert('重量不可為負值！');\n        ingredient.weight = 0;\n      }\n      const selectedItem = ingredient.items.find(item => item.item_id === ingredient.name);\n      if (selectedItem) {\n        ingredient.carbon_emission = selectedItem.carbon_emission * ingredient.weight;\n        ingredient.unit = selectedItem.unit || '';\n      } else {\n        ingredient.carbon_emission = 0;\n        ingredient.unit = '';\n      }\n    };\n    const addRow = type => {\n      const newIngredient = {\n        category: '',\n        name: '',\n        weight: '',\n        items: [],\n        carbon_emission: 0\n      };\n      if (type === 'food') {\n        ingredientsForFood.value.push(newIngredient);\n      } else if (type === 'energy') {\n        ingredientsForEnergy.value.push(newIngredient);\n      } else if (type === 'transport') {\n        ingredientsForTransport.value.push(newIngredient);\n      }\n    };\n    const calculateEmissions = () => {\n      const foodEmission = ingredientsForFood.value.reduce((total, ingredient) => total + ingredient.carbon_emission, 0);\n      const energyEmission = ingredientsForEnergy.value.reduce((total, ingredient) => total + ingredient.carbon_emission, 0);\n      const transportEmission = ingredientsForTransport.value.reduce((total, ingredient) => total + ingredient.carbon_emission, 0);\n      totalEmission.value = foodEmission + energyEmission + transportEmission;\n      carTravel.value = totalEmission.value * 5; // 假設1kg CO2等於行駛5公里\n      treesSaved.value = (totalEmission.value / 0.625).toFixed(1); // 假設1kg CO2等於10棵樹一個月的吸收量\n\n      // 只有當有碳排放量時才更新圖表並顯示\n      if (totalEmission.value > 0) {\n        nextTick(() => {\n          updateChart(foodEmission, energyEmission, transportEmission);\n        });\n      }\n    };\n    const updateChart = (foodEmission, energyEmission, transportEmission) => {\n      const ctx = document.getElementById('emissionChart').getContext('2d');\n      if (!ctx) {\n        console.error(\"Canvas element not found\");\n        return;\n      }\n      if (chartInstance.value) {\n        chartInstance.value.destroy(); // 如果圖表存在，就刪除\n      }\n      chartInstance.value = new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: ['食材類', '能源類', '運輸類'],\n          datasets: [{\n            label: '碳排放比例',\n            data: [foodEmission / totalEmission.value * 100, energyEmission / totalEmission.value * 100, transportEmission / totalEmission.value * 100],\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n            hoverOffset: 4\n          }]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  return context.label + ': ' + context.raw.toFixed(2) + '%';\n                }\n              }\n            }\n          }\n        }\n      });\n    };\n    const resetCalculator = () => {\n      ingredientsForFood.value = [{\n        category: '',\n        name: '',\n        weight: '',\n        items: [],\n        carbon_emission: 0\n      }];\n      ingredientsForEnergy.value = [{\n        category: '',\n        name: '',\n        weight: '',\n        items: [],\n        carbon_emission: 0\n      }];\n      ingredientsForTransport.value = [{\n        category: '',\n        name: '',\n        weight: '',\n        items: [],\n        carbon_emission: 0\n      }];\n      totalEmission.value = 0.00;\n      carTravel.value = 0;\n      treesSaved.value = 0;\n      if (chartInstance.value) {\n        chartInstance.value.destroy(); // 重置時刪除图表\n      }\n    };\n    fetchCategories(); // 初始化時分類數據\n\n    return {\n      categories,\n      ingredientsForFood,\n      ingredientsForEnergy,\n      ingredientsForTransport,\n      totalEmission,\n      carTravel,\n      treesSaved,\n      fetchItems,\n      updateCarbonEmission,\n      addRow,\n      calculateEmissions,\n      resetCalculator\n    };\n  },\n  mounted() {\n    const ctx = document.getElementById('emissionChart');\n    if (ctx) {\n      ctx.height = 400; // 圖表高度\n    }\n  }\n};","map":{"version":3,"names":["ref","nextTick","axios","Chart","registerables","register","setup","categories","ingredientsForFood","category","name","weight","items","carbon_emission","ingredientsForEnergy","ingredientsForTransport","totalEmission","carTravel","treesSaved","chartInstance","fetchCategories","get","then","response","value","data","catch","error","console","fetchItems","index","type","ingredientsArray","category_id","updateCarbonEmission","ingredient","alert","selectedItem","find","item","item_id","unit","addRow","newIngredient","push","calculateEmissions","foodEmission","reduce","total","energyEmission","transportEmission","toFixed","updateChart","ctx","document","getElementById","getContext","destroy","labels","datasets","label","backgroundColor","hoverOffset","options","responsive","plugins","legend","position","tooltip","callbacks","context","raw","resetCalculator","mounted","height"],"sources":["C:\\Users\\user\\carbon-calculator\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU\" crossorigin=\"anonymous\">\r\n    <!-- Header -->\r\n    <header>\r\n    <nav class=\"navbar fixed-top navbar-expand-lg navbar-dark \" style=\"background-color:  #6abf69;\">\r\n      <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" href=\"index.html\">台東減碳x慢食遊</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul class=\"navbar-nav\">\r\n           \r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link active\" aria-current=\"page\" href=\"App.vue\">碳排計算機</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link \"   href=\"slowfood_info.html\">慢食趣</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link \"  href=\"carbon_info.html\">減碳資訊及平台介紹</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link \" href=\"restaurent_info.html\">餐廳介紹</a>\r\n              </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    </header>\r\n    <div class=\"top\">\r\n    <h1>碳排計算機</h1>\r\n    <p>計算您餐點的碳排放量，助力環保</p>\r\n  </div>\r\n    <!-- Main Content -->\r\n    <main>\r\n      <!-- 食材選擇區 食材類 -->\r\n      <section class=\"ingredient-selection\">\r\n        <h2>食材類\r\n          <small style=\"font-size: 0.4em; color: gray; margin-left: 4px;\">(按 + 可新增)</small>\r\n        </h2>\r\n        <div class=\"ingredient-row\" v-for=\"(ingredient, index) in ingredientsForFood\" :key=\"index\">\r\n          <select class=\"ingredient-category\" v-model=\"ingredient.category\" @change=\"fetchItems(index, 'food')\">\r\n            <option value=\"\">選擇種類</option>\r\n            <option v-for=\"category in categories.filter(category => category.category_type === 2)\" :key=\"category.category_id\" :value=\"category.category_id\">\r\n              {{ category.category_name }}\r\n            </option>\r\n          </select>\r\n          <select class=\"ingredient-name\" v-model=\"ingredient.name\" @change=\"updateCarbonEmission(index, 'food')\">\r\n            <option value=\"\">選擇名稱</option>\r\n            <option v-for=\"item in ingredient.items\" :key=\"item.item_id\" :value=\"item.item_id\">\r\n              {{ item.item_name }}\r\n            </option>\r\n          </select>\r\n          <input type=\"number\" class=\"ingredient-weight\" v-model.number=\"ingredient.weight\" @input=\"updateCarbonEmission(index, 'food')\" :placeholder=\"ingredient.unit || '請輸入數值'\">\r\n          <button class=\"add-row\" @click=\"addRow('food')\">+</button>\r\n        </div>\r\n      </section>\r\n    </main>\r\n\r\n    <main>\r\n      <!-- 食材選擇區 能源類 -->\r\n      <section class=\"ingredient-selection\">\r\n        <h2>能源類</h2>\r\n        <div class=\"ingredient-row\" v-for=\"(ingredient, index) in ingredientsForEnergy\" :key=\"index\">\r\n          <select class=\"ingredient-category\" v-model=\"ingredient.category\" @change=\"fetchItems(index, 'energy')\">\r\n            <option value=\"\">選擇種類</option>\r\n            <option v-for=\"category in categories.filter(category => category.category_type === 3)\" :key=\"category.category_id\" :value=\"category.category_id\">\r\n              {{ category.category_name }}\r\n            </option>\r\n          </select>\r\n          <select class=\"ingredient-name\" v-model=\"ingredient.name\" @change=\"updateCarbonEmission(index, 'energy')\">\r\n            <option value=\"\">選擇名稱</option>\r\n            <option v-for=\"item in ingredient.items\" :key=\"item.item_id\" :value=\"item.item_id\">\r\n              {{ item.item_name }}\r\n            </option>\r\n          </select>\r\n          <input type=\"number\" class=\"ingredient-weight\" v-model.number=\"ingredient.weight\" @input=\"updateCarbonEmission(index, 'energy')\" :placeholder=\"ingredient.unit || '請輸入數值'\">\r\n          <button class=\"add-row\" @click=\"addRow('energy')\">+</button>\r\n        </div>\r\n      </section>\r\n    </main>\r\n\r\n    <main>\r\n      <!-- 食材選擇區 運輸類 -->\r\n      <section class=\"ingredient-selection\">\r\n        <h2>運輸類</h2>\r\n        <div class=\"ingredient-row\" v-for=\"(ingredient, index) in ingredientsForTransport\" :key=\"index\">\r\n          <select class=\"ingredient-category\" v-model=\"ingredient.category\" @change=\"fetchItems(index, 'transport')\">\r\n            <option value=\"\">選擇種類</option>\r\n            <option v-for=\"category in categories.filter(category => category.category_type === 1)\" :key=\"category.category_id\" :value=\"category.category_id\">\r\n              {{ category.category_name }}\r\n            </option>\r\n          </select>\r\n          <select class=\"ingredient-name\" v-model=\"ingredient.name\" @change=\"updateCarbonEmission(index, 'transport')\">\r\n            <option value=\"\">選擇名稱</option>\r\n            <option v-for=\"item in ingredient.items\" :key=\"item.item_id\" :value=\"item.item_id\">\r\n              {{ item.item_name }}\r\n            </option>\r\n          </select>\r\n          <input type=\"number\" class=\"ingredient-weight\" v-model.number=\"ingredient.weight\" @input=\"updateCarbonEmission(index, 'transport')\" :placeholder=\"ingredient.unit || '請輸入數值'\">\r\n          <button class=\"add-row\" @click=\"addRow('transport')\">+</button>\r\n        </div>\r\n      </section>\r\n    </main>\r\n\r\n\r\n    <main>\r\n      <!-- 計算按鈕 -->\r\n      <div class=\"button-group\">\r\n        <button class=\"reset-button\" @click=\"resetCalculator\">重新計算</button>\r\n\r\n        <button class=\"calculate-button\" @click=\"calculateEmissions\">計算碳排放</button>\r\n        \r\n      </div>\r\n      <!-- 結果顯示區 -->\r\n      <section class=\"results\">\r\n        <h2>總碳排放量</h2>\r\n        <p id=\"total-emission\">{{ totalEmission.toFixed(2) }} kg CO₂e</p>\r\n        <div class=\"comparison\">\r\n          <p><span id=\"trees-saved\">{{ treesSaved }}</span> 棵樹木一個月的吸收量</p>\r\n        </div>\r\n        <!-- 圖表 -->\r\n        \r\n        <div class=\"emissionChart\">\r\n          <canvas v-if=\"totalEmission >0\" id=\"emissionChart\"></canvas>\r\n        </div> \r\n      </section>\r\n    </main>\r\n\r\n    <!-- Footer -->\r\n    <footer>\r\n      <p>© 2024 餐點碳排放計算機 | 聯絡我們：(089)326141~326146</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, nextTick } from 'vue';\r\nimport axios from 'axios';\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\nChart.register(...registerables);\r\n\r\nexport default {\r\n  setup() {\r\n    const categories = ref([]);\r\n    const ingredientsForFood = ref([\r\n      { category: '', name: '', weight: '', items: [], carbon_emission: 0 }\r\n    ]);\r\n    const ingredientsForEnergy = ref([\r\n      { category: '', name: '', weight: '', items: [], carbon_emission: 0 }\r\n    ]);\r\n    const ingredientsForTransport = ref([\r\n      { category: '', name: '', weight: '', items: [], carbon_emission: 0 }\r\n    ]);\r\n    const totalEmission = ref(0.00);\r\n    const carTravel = ref(0);\r\n    const treesSaved = ref(0);\r\n    const chartInstance = ref(null);// Chart.js\r\n\r\n    const fetchCategories = () => {\r\n      axios.get('http://localhost:3001/api/categories')\r\n        .then(response => {\r\n          categories.value = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('There was an error fetching categories!', error);\r\n        });\r\n    };\r\n\r\n    const fetchItems = (index, type) => {\r\n      let ingredientsArray;\r\n      if (type === 'food') {\r\n        ingredientsArray = ingredientsForFood;\r\n      } else if (type === 'energy') {\r\n        ingredientsArray = ingredientsForEnergy;\r\n      } else if (type === 'transport') {\r\n        ingredientsArray = ingredientsForTransport;\r\n      }\r\n\r\n      const category_id = ingredientsArray.value[index].category;\r\n      if (category_id) {\r\n        axios.get(`http://localhost:3001/api/items/${category_id}`)\r\n          .then(response => {\r\n            ingredientsArray.value[index].items = response.data;\r\n            ingredientsArray.value[index].name = ''; // 重製食材\r\n          })\r\n          .catch(error => {\r\n            console.error('There was an error fetching items!', error);\r\n          });\r\n      }\r\n    };\r\n\r\n    const updateCarbonEmission = (index, type) => {\r\n      let ingredientsArray;\r\n      if (type === 'food') {\r\n        ingredientsArray = ingredientsForFood;\r\n      } else if (type === 'energy') {\r\n        ingredientsArray = ingredientsForEnergy;\r\n      } else if (type === 'transport') {\r\n        ingredientsArray = ingredientsForTransport;\r\n      }\r\n\r\n      const ingredient = ingredientsArray.value[index];\r\n      if (ingredient.weight < 0) {\r\n        alert('重量不可為負值！');\r\n        ingredient.weight = 0;\r\n      }\r\n      const selectedItem = ingredient.items.find(item => item.item_id === ingredient.name);\r\n      if (selectedItem) {\r\n        ingredient.carbon_emission = selectedItem.carbon_emission * ingredient.weight;\r\n        ingredient.unit = selectedItem.unit || '';\r\n      } else {\r\n        ingredient.carbon_emission = 0;\r\n        ingredient.unit = '';\r\n      }\r\n    };\r\n\r\n    const addRow = (type) => {\r\n      const newIngredient = { category: '', name: '', weight: '', items: [], carbon_emission: 0 };\r\n      if (type === 'food') {\r\n        ingredientsForFood.value.push(newIngredient);\r\n      } else if (type === 'energy') {\r\n        ingredientsForEnergy.value.push(newIngredient);\r\n      } else if (type === 'transport') {\r\n        ingredientsForTransport.value.push(newIngredient);\r\n      }\r\n    };\r\n\r\n    const calculateEmissions = () => {\r\n      const foodEmission = ingredientsForFood.value.reduce((total, ingredient) => total + ingredient.carbon_emission, 0);\r\n      const energyEmission = ingredientsForEnergy.value.reduce((total, ingredient) => total + ingredient.carbon_emission, 0);\r\n      const transportEmission = ingredientsForTransport.value.reduce((total, ingredient) => total + ingredient.carbon_emission, 0);\r\n\r\n      totalEmission.value = foodEmission + energyEmission + transportEmission;\r\n      carTravel.value = totalEmission.value * 5; // 假設1kg CO2等於行駛5公里\r\n      treesSaved.value = (totalEmission.value / 0.625).toFixed(1); // 假設1kg CO2等於10棵樹一個月的吸收量\r\n\r\n      // 只有當有碳排放量時才更新圖表並顯示\r\n      if (totalEmission.value > 0) {\r\n        nextTick(() => {\r\n        updateChart(foodEmission, energyEmission, transportEmission);\r\n      });\r\n    }\r\n  };\r\n\r\n    const updateChart = (foodEmission, energyEmission, transportEmission) => {\r\n      const ctx = document.getElementById('emissionChart').getContext('2d');\r\n\r\n      if (!ctx) {\r\n        console.error(\"Canvas element not found\");\r\n        return;\r\n      }\r\n\r\n      if (chartInstance.value) {\r\n        chartInstance.value.destroy(); // 如果圖表存在，就刪除\r\n      }\r\n\r\n      chartInstance.value = new Chart(ctx, {\r\n        type: 'pie',\r\n        data: {\r\n          labels: ['食材類', '能源類', '運輸類'],\r\n          datasets: [{\r\n            label: '碳排放比例',\r\n            data: [\r\n              foodEmission / totalEmission.value * 100,\r\n              energyEmission / totalEmission.value * 100,\r\n              transportEmission / totalEmission.value * 100,\r\n            ],\r\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n            hoverOffset: 4\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            tooltip: {\r\n              callbacks: {\r\n                label: function(context) {\r\n                  return context.label + ': ' + context.raw.toFixed(2) + '%';\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n    };  \r\n\r\n    const resetCalculator = () => {\r\n      ingredientsForFood.value = [{ category: '', name: '', weight: '', items: [], carbon_emission: 0 }];\r\n      ingredientsForEnergy.value = [{ category: '', name: '', weight: '', items: [], carbon_emission: 0 }];\r\n      ingredientsForTransport.value = [{ category: '', name: '', weight: '', items: [], carbon_emission: 0 }];\r\n      totalEmission.value = 0.00;\r\n      carTravel.value = 0;\r\n      treesSaved.value = 0;\r\n\r\n      if (chartInstance.value) {\r\n        chartInstance.value.destroy(); // 重置時刪除图表\r\n      }\r\n    };\r\n\r\n    fetchCategories(); // 初始化時分類數據\r\n\r\n    return {\r\n      categories,\r\n      ingredientsForFood,\r\n      ingredientsForEnergy,\r\n      ingredientsForTransport,\r\n      totalEmission,\r\n      carTravel,\r\n      treesSaved,\r\n      fetchItems,\r\n      updateCarbonEmission,\r\n      addRow,\r\n      calculateEmissions,\r\n      resetCalculator\r\n    };\r\n  },\r\n  mounted() {\r\n    const ctx = document.getElementById('emissionChart');\r\n    if (ctx) {\r\n      ctx.height = 400; // 圖表高度\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style src=\"./assets/style.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}