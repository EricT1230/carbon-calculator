{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { Chart } from 'chart.js';\nexport default {\n  data() {\n    return {\n      foodCategories: [],\n      // 食材類別\n      energyCategories: [],\n      // 能源類別\n      transportCategories: [],\n      // 運輸類別\n      ingredientsForFood: [{\n        category: '',\n        item: '',\n        value: '',\n        items: []\n      }],\n      ingredientsForEnergy: [{\n        category: '',\n        item: '',\n        value: '',\n        items: []\n      }],\n      ingredientsForTransport: [{\n        category: '',\n        item: '',\n        value: '',\n        items: []\n      }],\n      totalEmission: 0,\n      carTravel: 0,\n      treesSaved: 0,\n      chart: null\n    };\n  },\n  methods: {\n    fetchCategories() {\n      // 使用axios從後端API獲取類別\n      axios.get('/api/categories').then(response => {\n        const categories = response.data;\n        this.foodCategories = categories.filter(c => c.category_type === 2);\n        this.energyCategories = categories.filter(c => c.category_type === 3);\n        this.transportCategories = categories.filter(c => c.category_type === 1);\n      }).catch(error => {\n        console.error('Error fetching categories:', error);\n      });\n    },\n    fetchItems(categoryId, type, index) {\n      // 使用axios從後端API根據category_id獲取項目\n      axios.get(`/api/items/${categoryId}`).then(response => {\n        const items = response.data;\n        if (type === 'food') {\n          this.$set(this.ingredientsForFood[index], 'items', items);\n        } else if (type === 'energy') {\n          this.$set(this.ingredientsForEnergy[index], 'items', items);\n        } else if (type === 'transport') {\n          this.$set(this.ingredientsForTransport[index], 'items', items);\n        }\n      }).catch(error => {\n        console.error('Error fetching items:', error);\n      });\n    },\n    addRow(type) {\n      if (type === 'food') {\n        this.ingredientsForFood.push({\n          category: '',\n          item: '',\n          value: '',\n          items: []\n        });\n      } else if (type === 'energy') {\n        this.ingredientsForEnergy.push({\n          category: '',\n          item: '',\n          value: '',\n          items: []\n        });\n      } else if (type === 'transport') {\n        this.ingredientsForTransport.push({\n          category: '',\n          item: '',\n          value: '',\n          items: []\n        });\n      }\n    },\n    calculateEmissions() {\n      const calculateTotal = ingredients => {\n        return ingredients.reduce((total, ingredient) => {\n          const selectedItem = ingredient.items.find(i => i.id === ingredient.item);\n          return total + (selectedItem ? selectedItem.carbon_emission * ingredient.value : 0);\n        }, 0);\n      };\n      const foodEmission = calculateTotal(this.ingredientsForFood);\n      const energyEmission = calculateTotal(this.ingredientsForEnergy);\n      const transportEmission = calculateTotal(this.ingredientsForTransport);\n      this.totalEmission = foodEmission + energyEmission + transportEmission;\n      const foodPercentage = foodEmission / this.totalEmission * 100;\n      const energyPercentage = energyEmission / this.totalEmission * 100;\n      const transportPercentage = transportEmission / this.totalEmission * 100;\n\n      // 更新舊有功能\n      this.carTravel = this.totalEmission * 5; // 假设1kg CO2等于行驶5公里\n      this.treesSaved = (this.totalEmission / 0.625).toFixed(1); // 假设1kg CO2等于10棵树一个月的吸收量\n\n      // 渲染圖表\n      this.renderChart([foodPercentage, energyPercentage, transportPercentage]);\n    },\n    renderChart(data) {\n      if (this.chart) {\n        this.chart.destroy();\n      }\n      const ctx = document.getElementById('myChart').getContext('2d');\n      this.chart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: ['食材', '能源', '運輸'],\n          datasets: [{\n            data: data,\n            backgroundColor: ['#f1c40f', '#e74c3c', '#3498db'],\n            borderColor: ['#f39c12', '#c0392b', '#2980b9'],\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              max: 100,\n              ticks: {\n                callback: function (value) {\n                  return value + '%';\n                }\n              }\n            }\n          },\n          indexAxis: 'y',\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    },\n    resetForm() {\n      this.ingredientsForFood = [{\n        category: '',\n        item: '',\n        value: '',\n        items: []\n      }];\n      this.ingredientsForEnergy = [{\n        category: '',\n        item: '',\n        value: '',\n        items: []\n      }];\n      this.ingredientsForTransport = [{\n        category: '',\n        item: '',\n        value: '',\n        items: []\n      }];\n      this.totalEmission = 0;\n      this.carTravel = 0;\n      this.treesSaved = 0;\n      if (this.chart) {\n        this.chart.destroy();\n      }\n    }\n  },\n  mounted() {\n    this.fetchCategories();\n  }\n};","map":{"version":3,"names":["axios","Chart","data","foodCategories","energyCategories","transportCategories","ingredientsForFood","category","item","value","items","ingredientsForEnergy","ingredientsForTransport","totalEmission","carTravel","treesSaved","chart","methods","fetchCategories","get","then","response","categories","filter","c","category_type","catch","error","console","fetchItems","categoryId","type","index","$set","addRow","push","calculateEmissions","calculateTotal","ingredients","reduce","total","ingredient","selectedItem","find","i","id","carbon_emission","foodEmission","energyEmission","transportEmission","foodPercentage","energyPercentage","transportPercentage","toFixed","renderChart","destroy","ctx","document","getElementById","getContext","labels","datasets","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","max","ticks","callback","indexAxis","plugins","legend","display","resetForm","mounted"],"sources":["C:\\Users\\user\\carbon-calculator\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <header class=\"top\">\r\n      <div class=\"container\">\r\n        <h1>碳排放計算機</h1>\r\n        <p>計算您的餐點的碳排放量，助力環保</p>\r\n      </div>\r\n    </header>\r\n    <main class=\"container\">\r\n      <!-- 食材類 -->\r\n      <div class=\"ingredient-selection\">\r\n        <div class=\"ingredient-row row mb-3\" v-for=\"(ingredient, index) in ingredientsForFood\" :key=\"index\">\r\n          <div class=\"col-md-4\">\r\n            <select class=\"form-select\" v-model=\"ingredient.category\" @change=\"fetchItems(ingredient.category, 'food', index)\">\r\n              <option disabled value=\"\">選擇種類</option>\r\n              <option v-for=\"category in foodCategories\" :key=\"category.id\" :value=\"category.id\">{{ category.name }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <select class=\"form-select\" v-model=\"ingredient.item\">\r\n              <option disabled value=\"\">選擇名稱</option>\r\n              <option v-for=\"item in ingredient.items\" :key=\"item.id\" :value=\"item.id\">{{ item.name }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <input class=\"form-control\" type=\"number\" v-model=\"ingredient.value\" placeholder=\"請輸入數值\">\r\n          </div>\r\n        </div>\r\n        <button class=\"btn btn-success\" @click=\"addRow('food')\">+</button>\r\n      </div>\r\n\r\n      <!-- 能源類 -->\r\n      <div class=\"ingredient-selection\">\r\n        <div class=\"ingredient-row row mb-3\" v-for=\"(ingredient, index) in ingredientsForEnergy\" :key=\"index\">\r\n          <div class=\"col-md-4\">\r\n            <select class=\"form-select\" v-model=\"ingredient.category\" @change=\"fetchItems(ingredient.category, 'energy', index)\">\r\n              <option disabled value=\"\">選擇種類</option>\r\n              <option v-for=\"category in energyCategories\" :key=\"category.id\" :value=\"category.id\">{{ category.name }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <select class=\"form-select\" v-model=\"ingredient.item\">\r\n              <option disabled value=\"\">選擇名稱</option>\r\n              <option v-for=\"item in ingredient.items\" :key=\"item.id\" :value=\"item.id\">{{ item.name }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <input class=\"form-control\" type=\"number\" v-model=\"ingredient.value\" placeholder=\"請輸入數值\">\r\n          </div>\r\n        </div>\r\n        <button class=\"btn btn-success\" @click=\"addRow('energy')\">+</button>\r\n      </div>\r\n\r\n      <!-- 運輸類 -->\r\n      <div class=\"ingredient-selection\">\r\n        <div class=\"ingredient-row row mb-3\" v-for=\"(ingredient, index) in ingredientsForTransport\" :key=\"index\">\r\n          <div class=\"col-md-4\">\r\n            <select class=\"form-select\" v-model=\"ingredient.category\" @change=\"fetchItems(ingredient.category, 'transport', index)\">\r\n              <option disabled value=\"\">選擇種類</option>\r\n              <option v-for=\"category in transportCategories\" :key=\"category.id\" :value=\"category.id\">{{ category.name }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <select class=\"form-select\" v-model=\"ingredient.item\">\r\n              <option disabled value=\"\">選擇名稱</option>\r\n              <option v-for=\"item in ingredient.items\" :key=\"item.id\" :value=\"item.id\">{{ item.name }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <input class=\"form-control\" type=\"number\" v-model=\"ingredient.value\" placeholder=\"請輸入數值\">\r\n          </div>\r\n        </div>\r\n        <button class=\"btn btn-success\" @click=\"addRow('transport')\">+</button>\r\n      </div>\r\n\r\n      <!-- 按鈕 -->\r\n      <div class=\"button-group my-4\">\r\n        <button class=\"btn btn-warning me-2\" @click=\"resetForm\">重新計算</button>\r\n        <button class=\"btn btn-primary\" @click=\"calculateEmissions\">計算碳排放</button>\r\n      </div>\r\n\r\n      <!-- 視覺化條形圖 -->\r\n      <div v-if=\"totalEmission\">\r\n        <canvas id=\"myChart\"></canvas>\r\n      </div>\r\n\r\n      <!-- 顯示額外計算數據 -->\r\n      <div v-if=\"totalEmission\">\r\n        <p>可行駛距離: {{ carTravel }} 公里</p>\r\n        <p>節省樹木: {{ treesSaved }} 棵/一個月</p>\r\n      </div>\r\n    </main>\r\n    <footer class=\"text-center py-3\">\r\n      <p>&copy; 2024 餐點碳排放計算機 | 聯絡我們: (089)326141~326146</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { Chart } from 'chart.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      foodCategories: [],  // 食材類別\r\n      energyCategories: [],  // 能源類別\r\n      transportCategories: [],  // 運輸類別\r\n      ingredientsForFood: [{ category: '', item: '', value: '', items: [] }],\r\n      ingredientsForEnergy: [{ category: '', item: '', value: '', items: [] }],\r\n      ingredientsForTransport: [{ category: '', item: '', value: '', items: [] }],\r\n      totalEmission: 0,\r\n      carTravel: 0,\r\n      treesSaved: 0,\r\n      chart: null,\r\n    };\r\n  },\r\n  methods: {\r\n    fetchCategories() {\r\n      // 使用axios從後端API獲取類別\r\n      axios.get('/api/categories')\r\n        .then(response => {\r\n          const categories = response.data;\r\n          this.foodCategories = categories.filter(c => c.category_type === 2);\r\n          this.energyCategories = categories.filter(c => c.category_type === 3);\r\n          this.transportCategories = categories.filter(c => c.category_type === 1);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching categories:', error);\r\n        });\r\n    },\r\n    fetchItems(categoryId, type, index) {\r\n      // 使用axios從後端API根據category_id獲取項目\r\n      axios.get(`/api/items/${categoryId}`)\r\n        .then(response => {\r\n          const items = response.data;\r\n          if (type === 'food') {\r\n            this.$set(this.ingredientsForFood[index], 'items', items);\r\n          } else if (type === 'energy') {\r\n            this.$set(this.ingredientsForEnergy[index], 'items', items);\r\n          } else if (type === 'transport') {\r\n            this.$set(this.ingredientsForTransport[index], 'items', items);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching items:', error);\r\n        });\r\n    },\r\n    addRow(type) {\r\n      if (type === 'food') {\r\n        this.ingredientsForFood.push({ category: '', item: '', value: '', items: [] });\r\n      } else if (type === 'energy') {\r\n        this.ingredientsForEnergy.push({ category: '', item: '', value: '', items: [] });\r\n      } else if (type === 'transport') {\r\n        this.ingredientsForTransport.push({ category: '', item: '', value: '', items: [] });\r\n      }\r\n    },\r\n    calculateEmissions() {\r\n      const calculateTotal = (ingredients) => {\r\n        return ingredients.reduce((total, ingredient) => {\r\n          const selectedItem = ingredient.items.find(i => i.id === ingredient.item);\r\n          return total + (selectedItem ? selectedItem.carbon_emission * ingredient.value : 0);\r\n        }, 0);\r\n      };\r\n\r\n      const foodEmission = calculateTotal(this.ingredientsForFood);\r\n      const energyEmission = calculateTotal(this.ingredientsForEnergy);\r\n      const transportEmission = calculateTotal(this.ingredientsForTransport);\r\n\r\n      this.totalEmission = foodEmission + energyEmission + transportEmission;\r\n\r\n      const foodPercentage = (foodEmission / this.totalEmission) * 100;\r\n      const energyPercentage = (energyEmission / this.totalEmission) * 100;\r\n      const transportPercentage = (transportEmission / this.totalEmission) * 100;\r\n\r\n      // 更新舊有功能\r\n      this.carTravel = this.totalEmission * 5; // 假设1kg CO2等于行驶5公里\r\n      this.treesSaved = (this.totalEmission / 0.625).toFixed(1); // 假设1kg CO2等于10棵树一个月的吸收量\r\n\r\n      // 渲染圖表\r\n      this.renderChart([foodPercentage, energyPercentage, transportPercentage]);\r\n    },\r\n    renderChart(data) {\r\n      if (this.chart) {\r\n        this.chart.destroy();\r\n      }\r\n      const ctx = document.getElementById('myChart').getContext('2d');\r\n      this.chart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: ['食材', '能源', '運輸'],\r\n          datasets: [{\r\n            data: data,\r\n            backgroundColor: ['#f1c40f', '#e74c3c', '#3498db'],\r\n            borderColor: ['#f39c12', '#c0392b', '#2980b9'],\r\n            borderWidth: 1,\r\n          }]\r\n        },\r\n        options: {\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: 100,\r\n              ticks: {\r\n                callback: function(value) {\r\n                  return value + '%';\r\n                }\r\n              }\r\n            }\r\n          },\r\n          indexAxis: 'y',\r\n          plugins: {\r\n            legend: {\r\n              display: false\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    resetForm() {\r\n      this.ingredientsForFood = [{ category: '', item: '', value: '', items: [] }];\r\n      this.ingredientsForEnergy = [{ category: '', item: '', value: '', items: [] }];\r\n      this.ingredientsForTransport = [{ category: '', item: '', value: '', items: [] }];\r\n      this.totalEmission = 0;\r\n      this.carTravel = 0;\r\n      this.treesSaved = 0;\r\n      if (this.chart) {\r\n        this.chart.destroy();\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchCategories();\r\n  }\r\n}\r\n</script>\r\n\r\n<style src=\"./style.css\"></style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}